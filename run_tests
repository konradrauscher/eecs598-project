#!/bin/bash
# The interpreter used to execute the script

#“#SBATCH” directives that convey submission options:

#SBATCH --job-name=example_job
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=1
#SBATCH --mem-per-cpu=1000m 
#SBATCH --time=01:00
#SBATCH --account=eecs498f21_class
#SBATCH --partition=gpu
#SBATCH --gpus-per-node=1

# The application(s) to execute along with its input arguments and options:

if [ "$#" -ne 1 ] && [ "$#" -ne 2 ]; then
    echo "Usage: ./run_tests {program}"
    echo "Usage: ./run_tests {program} {test_number}"
    exit 1
fi

export LD_LIBRARY_PATH=$PWD/libwb/build/:$LD_LIBRARY_PATH

if [ "$#" -eq  1 ]; then
    SCORE=0
    TOTAL=0
    for test in test/*; do
        ((++TOTAL))
        ./$1 -i $test/input.ppm -o $test/attempt_seq.jpg -t image &>/dev/null
        ./$1 -i $test/input.ppm -o $test/attempt_par.jpg -t image --parallel &>/dev/null
        DIFF=$(diff $test/attempt_seq.jpg $test/attempt_par.jpg) &>/dev/null
        if [ "$DIFF" != "" ] 
        then
            echo "$test is incorrect..."
        else
            ((++SCORE))
            echo "Passed $test!"
        fi
    done

    echo "$SCORE/$TOTAL tests passed"
fi

if [ "$#" -eq  2 ]; then
    ./$1 -i test/$2/input.ppm -o test/$2/attempt_seq.jpg -t image
    ./$1 -i test/$2/input.ppm -o test/$2/attempt_par.jpg -t image --parallel
    DIFF=$(diff test/$2/attempt_seq.jpg test/$2/attempt_par.jpg) &>/dev/null
    if [ "$DIFF" != "" ] 
    then
        echo "test $2 is incorrect..."
    else
        echo "Passed test $2!"
    fi
fi
